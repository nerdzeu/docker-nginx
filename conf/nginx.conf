user http;
worker_processes 1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Define function used to replace spaces (or plus sign) with + instead of the plus sign
    perl_set $profile 'sub {
        my $uri = shift->uri;
        $uri =~ s/%2b/+/ig;

        return "$1" if $uri =~ /^\/(.+?)\.$/;
        return "$1&pid=$2" if $uri =~ /^\/(.+?)\.(\d+)$/;
        return "$1&action=$2" if $uri =~ /^\/(.+?)\.(friends|followers|following|interactions)$/;
        return "$1&action=$2&$3" if $uri =~ /^\/(.+?)\.(friends|followers|following|interactions)\?(.*)$/;
    }';


    perl_set $project 'sub {
        my $uri = shift->uri;
        $uri =~ s/%2b/+/ig;

        return "$1" if $uri =~ /^\/(.+?):$/;
        return "$1&pid=$2" if $uri =~ /^\/(.+?):(\d+)$/;
        return "$1&action=$2" if $uri =~ /^\/(.+?):(followers|members|interactions)$/;
        return "$1&action=$2&$3" if $uri =~ /^\/(.+?):(followers|members|interactions)\?(.*)$/;
    }';

    server {
        server_name primary.nerdz.eu mobile.primary.nerdz.eu;
        listen 80;
        root /srv/http/nerdz.eu/;

        # add charset=htf-8 to http response
        charset utf-8;

        index index.php index.html;
        # turn base_url//resoruce into base_url/resource 
        merge_slashes on;

        # begin ssl support
        include ssl.conf;

        # camo image proxy
        location ~ "/secure/image/([A-Za-z0-9]{40})" {
            expires max;
            proxy_buffers 8 16k;
            proxy_pass http://127.0.0.1:9098/$1$is_args$args;
        }
        # end ssl support

        error_page 404 /error.php?code=404;

        location @404 {
            return 404;
        }

        location / {
            # profile.php
            rewrite ^/.+?\.(?:|\d+|(?:friends|followers|following|interactions)|(?:(?:friends|followers|following|interactions)\?.*))$ /profile.php?id=$profile last;

            # project.php
            rewrite ^/.+?:(?:|\d+|(?:followers|members|interactions)|(?:(?:followers|members|interactions)\?.*))$ /project.php?gid=$project last;

            # files
            rewrite ^/README\.md$ @404 break;
            rewrite ^\.gitignore$ @404 break;
            rewrite ^/\.htaccess$ @404 break;
     
            # deny access to some dir
            include dir_access.conf;

            # sitemap
            rewrite ^/sitemap\.xml$ /sitemap.php last;

            try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
            # enable cors requests
            include cors.conf;
            # deny access to some dir
            include dir_access.conf;
            # fastcgi send back to nginx errors
            fastcgi_intercept_errors on;
            include fastcgi.conf;
        }

        # enable compression - so it localS when ssl IS enabled or static domain is disabled
        location ~ /(static|tpl) {
            # enable gzip compression
            gzip on;
            # compress js, css files
            gzip_types text/javascript application/javascript text/css;
            # add resonse header "Vary: Accept-Encoding"
            gzip_vary on;
            # cache full uri, not only filename without parameters
            proxy_cache_key "$scheme$host$uri$is_args$args";
            expires max;
        }

        location ~* \.(jpg|jpeg|gif|css|png|js|ico|html?|bmp|cur)$ {
            # cache full uri, not only filename without parameters
            proxy_cache_key "$scheme$host$uri$is_args$args";
            expires max;
        }
    }

    server {
        server_name static.primary.nerdz.eu;
        listen 80;
        root /srv/http/nerdz.eu/;

        # add charset=htf-8 to http response
        charset utf-8;

        # turn base_url//resoruce into base_url/resource 
        merge_slashes on;

        # cache full uri, not only filename without parameters
        proxy_cache_key "$scheme$host$uri$is_args$args";

        location ~ (api|captcha|invalidImgUrl|onErrorImg)\.php$ {
            expires max;
            include fastcgi.conf;
        }

        location ~ /(static|tpl) {
            # enable gzip compression
            gzip on;
            # compress js, css files
            gzip_types text/javascript application/javascript text/css;
            # add resonse header "Vary: Accept-Encoding"
            gzip_vary on;

            # enable CORS request (downloading .woff files from static domain, ecc)
            include cors.conf;

            expires max;
        }

        location / {
            return 302 $scheme://primary.nerdz.eu/error.php?code=403;
        }
    }
}
