# Define function used to replace spaces (or plus sign) with + instead of the plus sign

perl_set $profile 'sub {
    my $uri = shift->uri;
    $uri =~ s/%2b/+/ig;

    return "$1" if $uri =~ /^\/(.+?)\.$/;
    return "$1&pid=$2" if $uri =~ /^\/(.+?)\.(\d+)$/;
    return "$1&action=$2" if $uri =~ /^\/(.+?)\.(friends|followers|following|interactions)$/;
    return "$1&action=$2&$3" if $uri =~ /^\/(.+?)\.(friends|followers|following|interactions)\?(.*)$/;
}';


perl_set $project 'sub {
    my $uri = shift->uri;
    $uri =~ s/%2b/+/ig;

    return "$1" if $uri =~ /^\/(.+?):$/;
    return "$1&pid=$2" if $uri =~ /^\/(.+?):(\d+)$/;
    return "$1&action=$2" if $uri =~ /^\/(.+?):(followers|members|interactions)$/;
    return "$1&action=$2&$3" if $uri =~ /^\/(.+?):(followers|members|interactions)\?(.*)$/;
}';


# main server https://www.root
server {
    server_name www.nerdz.eu;
    include conf.d/nerdz.eu/ssl_www.conf; #443
    listen 80;
    root /srv/http/www.nerdz.eu;
    access_log /dev/null;

    # add charset=utf-8 to http response
    charset utf-8;

    # enable logging for mod rewrite
    # rewrite_log on;
    error_log /srv/http/nerdz.eu/data/www-error.log notice;
    index index.php index.html;
    # turn base_url//resoruce into base_url/resource
    merge_slashes on;

    error_page 404 /error.php?code=404;

    location @404 {
        return 404;
    }

    location / {
        # profile.php
        rewrite ^/.+?\.(?:|\d+|(?:friends|followers|following|interactions)|(?:(?:friends|followers|following|interactions)\?.*))$ /profile.php?id=$profile last;

        # project.php
        rewrite ^/.+?:(?:|\d+|(?:followers|members|interactions)|(?:(?:followers|members|interactions)\?.*))$ /project.php?gid=$project last;

        # files
        rewrite ^/README\.md$ @404 break;
        rewrite ^\.gitignore$ @404 break;
        rewrite ^/\.htaccess$ @404 break;
 
        # deny access to some dir
        include conf.d/nerdz.eu/dir_access.conf;

        # sitemap
        rewrite ^/sitemap\.xml$ /sitemap.php last;

        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        # enable cors requests
        include conf.d/nerdz.eu/cors.conf;
        # deny access to some dir
        include conf.d/nerdz.eu/dir_access.conf;
        # fastcgi send back to nginx errors
        fastcgi_intercept_errors on;
        include conf.d/nerdz.eu/php-fpm.conf;
    }

    # enable compression - so it works when ssl IS enabled or static domain is disabled
    location ~ /(static|tpl) {
        # enable gzip compression
        gzip on;
        # compress js, css files
        gzip_types text/javascript application/javascript text/css;
        # add resonse header "Vary: Accept-Encoding"
        gzip_vary on;
        # cache full uri, not only filename without parameters
        proxy_cache_key "$scheme$host$uri$is_args$args";
        expires max;
    }

    location ~* \.(jpg|jpeg|gif|css|png|js|ico|html?|bmp|cur)$ {
        # cache full uri, not only filename without parameters
        proxy_cache_key "$scheme$host$uri$is_args$args";
        expires max;
    }
}

# https://mobile
server {
    server_name mobile.nerdz.eu;
    include conf.d/nerdz.eu/ssl_mobile.conf; # 443
    listen 80;
    root /srv/http/mobile.nerdz.eu;
    access_log /dev/null;

    # add charset=utf-8 to http response
    charset utf-8;

    error_log /srv/http/nerdz.eu/data/mobile-error.log notice;
    index index.php index.html;

    # turn base_url//resoruce into base_url/resource
    merge_slashes on;

    error_page 404 /error.php?code=404;

    location @404 {
        return 404;
    }

    location / {
        # profile.php
        rewrite ^/.+?\.(?:|\d+|(?:friends|followers|following|interactions)|(?:(?:friends|followers|following|interactions)\?.*))$ /profile.php?id=$profile last;

        # project.php
        rewrite ^/.+?:(?:|\d+|(?:followers|members|interactions)|(?:(?:followers|members|interactions)\?.*))$ /project.php?gid=$project last;

        # files
        rewrite ^/README\.md$ @404 break;
        rewrite ^\.gitignore$ @404 break;
        rewrite ^/\.htaccess$ @404 break;
 
        # deny access to some dir
        include conf.d/nerdz.eu/dir_access.conf;

        # sitemap
        rewrite ^/sitemap\.xml$ /sitemap.php last;

        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        # enable cors requests
        include conf.d/nerdz.eu/cors.conf;
        # deny access to some dir
        include conf.d/nerdz.eu/dir_access.conf;
        # fastcgi send back to nginx errors
        fastcgi_intercept_errors on;
        include conf.d/nerdz.eu/php-fpm.conf;
    }

    # enable compression - so it works when ssl IS enabled or static domain is disabled
    location ~ /(static|tpl) {
        # enable gzip compression
        gzip on;
        # compress js, css files
        gzip_types text/javascript application/javascript text/css;
        # add resonse header "Vary: Accept-Encoding"
        gzip_vary on;
        # cache full uri, not only filename without parameters
        proxy_cache_key "$scheme$host$uri$is_args$args";
        expires max;
    }

    location ~* \.(jpg|jpeg|gif|css|png|js|ico|html?|bmp|cur)$ {
        # cache full uri, not only filename without parameters
        proxy_cache_key "$scheme$host$uri$is_args$args";
        expires max;
    }
}

# https://static
server {
    server_name static.nerdz.eu;
    include conf.d/nerdz.eu/ssl_static.conf; # 443
    listen 80;
    root /srv/http/static.nerdz.eu;
    access_log /dev/null;
    error_log /srv/http/nerdz.eu/data/static-error.log;

    # add charset=utf-8 to http response
    charset utf-8;

    # turn base_url//resoruce into base_url/resource
    merge_slashes on;

    # cache full uri, not only filename without parameters
    proxy_cache_key "$scheme$host$uri$is_args$args";

    location ~ (api|captcha|invalidImgUrl|onErrorImg)\.php$ {
        expires max;
        include conf.d/nerdz.eu/php-fpm.conf;
    }

    location ~ /(static|tpl) {
        # enable gzip compression
        gzip on;
        # compress js, css files
        gzip_types text/javascript application/javascript text/css;
        # add resonse header "Vary: Accept-Encoding"
        gzip_vary on;

        # enable CORS request (downloading .woff files from static domain, ecc)
        include conf.d/nerdz.eu/cors.conf;

        expires max;
    }

    location / {
        return 302 $scheme://www.nerdz.eu/error.php?code=403;
    }
}

##### Reverse proxies #####

# media.nerdz.eu -> localhost:9999
# media.nerdz.eu/camo -> localhost:8081

server {
    server_name media.nerdz.eu;
    include conf.d/nerdz.eu/ssl_media.conf; #443
    listen 80;

    # turn base_url//resoruce into base_url/resource
    merge_slashes on;

    real_ip_header    X-Real-IP;
    real_ip_recursive on;
    client_max_body_size 50M;

    location / {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "HEAD, GET, OPTIONS, POST, PUT, DELETE";
        add_header Access-Control-Allow-Headers X-CORS-Status;
        proxy_pass  http://127.0.0.1:9999;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-Start $msec;
    }

    location /api {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "HEAD, GET, OPTIONS, POST, PUT, DELETE";
        add_header Access-Control-Allow-Headers X-CORS-Status;

        proxy_pass  http://127.0.0.1:9999;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-Start $msec;
    }

    location /static {
        gzip on;
        proxy_pass  http://127.0.0.1:9999;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-Start $msec;
    }

    location ~ ^/camo/(.*)$ {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        proxy_pass  http://127.0.0.1:8081/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-Start $msec;
    }

}

# api.nerdz.eu -> localhost:8088

server {
    server_name api.nerdz.eu;
    include conf.d/nerdz.eu/ssl_api.conf; #443
    listen 80;

    # turn base_url//resoruce into base_url/resource
    merge_slashes on;

    real_ip_header    X-Real-IP;
    real_ip_recursive on;

    location / {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "HEAD, GET, OPTIONS, POST, PUT, DELETE";
        add_header Access-Control-Allow-Headers X-CORS-Status;
        proxy_pass  http://127.0.0.1:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Request-Start $msec;
    }
}

##### HTTP->HTTPS redirects #####

# redirect http://media to https://media
server {
    server_name media.nerdz.eu;
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect https?://root to https://www.root
server {
    server_name nerdz.eu;
    include conf.d/nerdz.eu/ssl_root.conf; #443
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect http://www. to https://www.root
server {
    server_name www.nerdz.eu;
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect http://mobile to https://mobile
server {
    server_name mobile.nerdz.eu;
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect http://static to https://static
server {
    server_name static.nerdz.eu;
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect http://api to https://api
server {
    server_name api.nerdz.eu;
    listen 80;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
